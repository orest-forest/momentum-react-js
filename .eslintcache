[{"D:\\git hub projects\\momentum-react\\my-app\\src\\index.js":"1","D:\\git hub projects\\momentum-react\\my-app\\src\\reportWebVitals.js":"2","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\App.js":"3","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\clock.js":"4","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\ShowMonth.js":"5","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\backgound-image.js":"6","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\NameInput.js":"7","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\Weather.js":"8","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\Quote.js":"9","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\showWeather.js":"10"},{"size":511,"mtime":1610991305606,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":468,"mtime":1611136935000,"results":"14","hashOfConfig":"12"},{"size":518,"mtime":1610992084372,"results":"15","hashOfConfig":"12"},{"size":813,"mtime":1610992084427,"results":"16","hashOfConfig":"12"},{"size":1954,"mtime":1611242010750,"results":"17","hashOfConfig":"12"},{"size":1154,"mtime":1611077958859,"results":"18","hashOfConfig":"12"},{"size":1994,"mtime":1611229305221,"results":"19","hashOfConfig":"12"},{"size":1084,"mtime":1611165153402,"results":"20","hashOfConfig":"12"},{"size":899,"mtime":1611242050214,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"138973",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git hub projects\\momentum-react\\my-app\\src\\index.js",[],["49","50"],"D:\\git hub projects\\momentum-react\\my-app\\src\\reportWebVitals.js",[],"D:\\git hub projects\\momentum-react\\my-app\\src\\components\\App.js",["51"],"import logo from '../logo.svg';\nimport '../App.css';\nimport Clock from './clock.js'\nimport ShowMonth from './ShowMonth.js'\nimport Background from './backgound-image.js'\nimport NameInput from  './NameInput.js'\nimport Weather from './Weather.js'\nimport Quote from './Quote.js'\n\nfunction App() {\n  return <div className=\"app\">\n      <Clock />\n      <ShowMonth />\n      <Background />\n      <NameInput />\n      <Weather />\n      <Quote />\n  </div>\n\n}\n\nexport default App;\n","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\clock.js",["52"],"import React, {Component, useState, useEffect} from \"react\";\r\n// import s from \"../App.css\";\r\n\r\nfunction Clock() {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n\r\n    useEffect (() => {\r\nlet timerId = setInterval( () => tick(), 1000)\r\n        return function cleanup() {\r\n            clearInterval(timerId)\r\n        }\r\n    });\r\n\r\n    function tick () {\r\n        setDate(new Date());\r\n    }\r\n\r\n\r\n    return <time className = \"time\">\r\n        {date.toLocaleTimeString()}\r\n    </time>\r\n}\r\n\r\nexport default Clock","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\ShowMonth.js",["53","54","55","56"],"import React, {Component, useState, useEffect} from \"react\";\r\n// import s from \"../App.css\";\r\n\r\nfunction ShowMonth() {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    let monthName = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октябрь', 'Ноября', 'Декабря'];\r\n    let dayOfWeekName = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\n    let month = date.getMonth();\r\n    let dayOfMonth = date.getDate();\r\n    let dayOfWeek = dayOfWeekName[date.getDay()];\r\n\r\n    return <time className= \"month\">\r\n        {dayOfWeek} {dayOfMonth}  {monthName[month] }\r\n    </time>\r\n}\r\n\r\nexport default ShowMonth","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\backgound-image.js",["57","58","59","60"],"D:\\git hub projects\\momentum-react\\my-app\\src\\components\\NameInput.js",["61","62","63","64","65","66"],"import React, {Component, useState, useEffect, useRef} from \"react\";\r\n\r\nfunction NameInput() {\r\n\r\nconst [name, setName] = useState(localStorage.nameHash);\r\nconst [focus, setFocus] = useState(false);\r\nconst inputRef = useRef(null);\r\n\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        inputRef.current.blur();\r\n        if (name.length == 0) {\r\n            localStorage.name = 'Введите ваше имя';\r\n            return setName('Введите ваше имя')\r\n        }\r\n        localStorage.nameHash = name\r\n    };\r\n\r\nconst twoCalls = e => {\r\n   setName(e.target.value);\r\n   localStorage.nameHash = e.target.value;\r\n};\r\n\r\nconst checkName = () => {\r\n    if (name.length == 0) {\r\n        localStorage.nameHash = 'Введите ваше имя';\r\n        return setName('Введите ваше имя')\r\n    }\r\n};\r\n\r\n    return <form onSubmit = {handleSubmit}>\r\n        < input\r\n            className=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={twoCalls}\r\n            onBlur={checkName}\r\n            ref={inputRef}\r\n        />\r\n    </form>\r\n\r\n}\r\n\r\n\r\n\r\nexport default NameInput;","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\Weather.js",["67","68","69"],"import React, {Component, useState, useEffect} from \"react\";\r\nimport ShowWeather from './showWeather.js'\r\n\r\nfunction Weather() {\r\n\r\n    const [city, setCity] = useState(localStorage.cityHash);\r\n    const [cityInfo, setCityInfo] = useState(null);\r\n    // const  [inputValue, setInputValue] = useState();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let api_key = 'c35684ca22b136eac156e9ea6d05997e';\r\n        if (city) {\r\n\r\n            const api_url = await\r\n                fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}&units=metric`);\r\n            const data = await api_url.json();\r\n            setCityInfo(data)\r\n            console.log(data);\r\n        } }catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n\r\n    }, [city]);\r\n\r\n    const submitCity = (e) => {\r\n        e.preventDefault();\r\n      setCity(localStorage.cityHash)\r\n    };\r\n\r\n    const handleChange = (evt) => {\r\n   localStorage.cityHash = evt.target.value\r\n    };\r\n\r\n    const showWeather = () => {\r\n        if (cityInfo == null) {\r\n            return null\r\n        } else {\r\n            return <p>{Object.keys(cityInfo.name)}</p>\r\n        }\r\n    };\r\n\r\n    if (city == null && cityInfo == null) {\r\n        return <form\r\n            onSubmit={submitCity}\r\n        >\r\n        <input\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n        />\r\n            <button onClick={submitCity}>Узнать погоду</button>\r\n        </form>\r\n\r\n    } else {\r\n        return <div>\r\n            <div>\r\n                <h3>123</h3>\r\n                <ShowWeather {...cityInfo} />\r\n                {/*<p>{city.main.temp}</p>*/}\r\n            </div>\r\n            <form onSubmit={submitCity}>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button onClick={submitCity}>Узнать погоду</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Weather","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\Quote.js",["70","71","72"],"import React, {Component, useState, useEffect} from \"react\";\r\n\r\nfunction Quote() {\r\n\r\n    const [quote, setQuote] = useState(null);\r\n    const [newQuoteResponding, setNewQuote] = useState(false);\r\n\r\n    useEffect(async () => {\r\n            let apiKey = 'https://type.fit/api/quotes';\r\n                const res = await fetch(apiKey);\r\n                const data = await res.json();\r\n                console.log(data[Math.floor(Math.random() * Math.floor(data.length))]);\r\n                let quoteObj = data[Math.floor(Math.random() * Math.floor(data.length))]\r\n                setQuote(data[Math.floor(Math.random() * Math.floor(data.length))])\r\n            // console.log\r\n    },[newQuoteResponding]);\r\n\r\n    const newQuote = () => {\r\n        setNewQuote(!newQuoteResponding)\r\n    };\r\n\r\n    // const getQuote = async () => {\r\n    //     let apiKey = 'https://type.fit/api/quotes';\r\n    //     const res = await fetch(apiKey);\r\n    //     const data = await res.json();\r\n    //     console.log(data[Math.floor(Math.random() * Math.floor(data.length))]);\r\n    //     let quoteObj = data[Math.floor(Math.random() * Math.floor(data.length))]\r\n    //     setQuote(data[Math.floor(Math.random() * Math.floor(data.length))])\r\n    // }\r\n\r\n    console.log('render quote')\r\nif (quote == null) {return null} else {\r\n    return <div>\r\n        <blockquote>{quote.text}</blockquote>\r\n        <p>{quote.author}</p>\r\n        <button onClick={newQuote}>Получить новую цитату</button>\r\n    </div>}\r\n}\r\n\r\nexport default Quote","D:\\git hub projects\\momentum-react\\my-app\\src\\components\\showWeather.js",["73","74","75","76","77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"89","line":1,"column":37,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"84","severity":1,"message":"90","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":9},{"ruleId":"84","severity":1,"message":"91","line":6,"column":18,"nodeType":"86","messageId":"87","endLine":6,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"90","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":9},{"ruleId":"84","severity":1,"message":"92","line":12,"column":19,"nodeType":"86","messageId":"87","endLine":12,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":12,"column":40,"nodeType":"95","messageId":"96","endLine":12,"endColumn":48,"fix":"97"},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"89","line":1,"column":37,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"84","severity":1,"message":"98","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":13},{"ruleId":"84","severity":1,"message":"99","line":6,"column":15,"nodeType":"86","messageId":"87","endLine":6,"endColumn":23},{"ruleId":"100","severity":1,"message":"101","line":13,"column":25,"nodeType":"102","messageId":"103","endLine":13,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":26,"column":21,"nodeType":"102","messageId":"103","endLine":26,"endColumn":23},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":10,"column":15,"nodeType":"106","endLine":25,"endColumn":6},{"ruleId":"84","severity":1,"message":"107","line":36,"column":11,"nodeType":"86","messageId":"87","endLine":36,"endColumn":22},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":8,"column":15,"nodeType":"106","endLine":16,"endColumn":6},{"ruleId":"84","severity":1,"message":"108","line":13,"column":21,"nodeType":"86","messageId":"87","endLine":13,"endColumn":29},{"ruleId":"84","severity":1,"message":"88","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"109","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"89","line":1,"column":37,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"100","severity":1,"message":"101","line":4,"column":35,"nodeType":"102","messageId":"103","endLine":4,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":4,"column":53,"nodeType":"102","messageId":"103","endLine":4,"endColumn":55},{"ruleId":"84","severity":1,"message":"110","line":10,"column":11,"nodeType":"86","messageId":"87","endLine":10,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":25,"column":9,"nodeType":"113","endLine":25,"endColumn":30},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useEffect' is defined but never used.","'s' is defined but never used.","'setDate' is assigned a value but never used.","'setToday' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"116","text":"117"},"'focus' is assigned a value but never used.","'setFocus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'showWeather' is assigned a value but never used.","'quoteObj' is assigned a value but never used.","'useState' is defined but never used.","'weatherIcons' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[444,444],"()"]